/////                                                  \\\\\
///// mainline divine spells                           \\\\\
/////                                                  \\\\\

COPY_EXISTING ~#prayerb.spl~ ~override~ // [no name] subspell of prayer (sppr202)
              ~#prayerg.spl~ ~override~ // [no name] subspell of prayer (sppr202)
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~#reciteb.spl~ ~override~ // [no name] subspell of recitation, sppr420
              ~#reciteg.spl~ ~override~ // [no name] subspell of recitation, sppr420
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~#rw_ex.spl~   ~override~ // unused, was part of rwotf
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_PROTECT_FROM_EVIL%.spl~ ~override~ // sppr107, protection from evil
              ~%CLERIC_PROTECT_FROM_GOOD%.spl~ ~override~ // sppr199, protection from good [iwdee]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (3 * round) END // three rounds/level
  BUT_ONLY IF_EXISTS

ACTION_IF game_is_iwdee BEGIN 

  COPY_EXISTING ~%CLERIC_SANCTUARY%.spl~ ~override~ // sppr109, sanctuary
                ~ca#ds109.spl~           ~override~ // [geomantic sorcerer] sanctuary
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 2) step_dur = (round * 1) END // 2 rounds + 1 round/level
    BUT_ONLY IF_EXISTS

END
  
COPY_EXISTING ~%CLERIC_SHILLELAGH%.spl~ ~override~ // sppr110, shillelagh
              ~ca#ds110.spl~            ~override~ // [geomantic sorcerer] shillelagh
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (4 * round) END // four rounds + 1 round/level
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_ARMOR_OF_FAITH%.spl~ ~override~ // sppr111, armor of faith
              ~a#justaf.spl~                ~override~ // 'armour of faith' [divine remix innate]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (3 * round) RET abil_delta END // three rounds + 1 round/level
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // absorbs 5% of damage every five levels
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF (((op >= 27) AND (op <= 31)) OR ((op >= 84) AND (op <= 89))) BEGIN // ops for various damage resistances
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (((level / 5) + 1) * 5)
        END        
      END  
    END
  END  
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_FAERIE_FIRE%.spl~ ~override~ // sppr116
  PATCH_IF ((MOD_IS_INSTALLED ~divine_remix/setup-divine_remix~ ~10~) OR (MOD_IS_INSTALLED ~divine_remix/setup-divine_remix~ ~11~)) BEGIN
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_dur = (1 * round) step_size = 5 END // four rounds + 1 round/5 levels
  END ELSE BEGIN // sod
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (4 * round) END // four rounds/level
  END  
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_SUNSCORCH%.spl~  ~override~ // sppr118, sunscorch [iwdee/iwdspells]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 10000 END // duration is static, just create headers
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_SUNSCORCH%c.spl~ ~override~ // sppr118, sunscorch (non-undead/non-myconid damage) [iwdee/iwdspells]
              ~%CLERIC_SUNSCORCH%d.spl~ ~override~ // sppr118, sunscorch (undead/myconid damage) [iwdee/iwdspells]
  PATCH_IF ("%SOURCE_RES%" STRING_COMPARE_CASE ~%CLERIC_SUNSCORCH%d~ = 0) BEGIN SET multiply = 2 END ELSE BEGIN SET multiply = 1 END
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 damage_fixed = multiply base_dmg_rolls = 1 save_for_half = 3 END // damage is 1d6 + 1/level or 1d6 + 2/level for undead/myconids
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_SPIRIT_WARD%.spl~ ~override~ // sppr150, spirit ward
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (3 * round) END // three rounds/level
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_AID%.spl~ ~override~ // sppr201, aid
              ~ca#aid.spl~       ~override~ // [pnp celestials innate] aid
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = round min_dur = 6 END // one round + 1 round/level, has one 6-second 215
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_BARKSKIN%.spl~ ~override~ // sppr202, barkskin
              ~ca#ds202.spl~          ~override~ // [geomantic sorcerer] barkskin
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (4 * round) RET abil_delta END // four rounds + 1 round/level 
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // also gets an AC bump every four levels
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 0 BEGIN // ac
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (6 - (level /4))
        END        
      END  
    END
  END  
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_FLAME_BLADE%.spl~ ~override~ // sppr206, flame blade
              ~ca#ds206.spl~             ~override~ // [geomantic sorcerer] flame blade
  PATCH_IF game_is_iwdee BEGIN
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (4 * round) END // four rounds + 1 round/level
  END ELSE BEGIN
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_size = 2 END // four rounds + 1 round/2 levels
  END  
  BUT_ONLY IF_EXISTS

ACTION_IF game_is_iwdee BEGIN

  COPY_EXISTING ~%CLERIC_HOLD_PERSON%.spl~ ~override~ // sppr208, hold person
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (round * 2) RET abil_delta END // 2 rounds/level
    BUT_ONLY IF_EXISTS

END
  
COPY_EXISTING ~%CLERIC_RESIST_FIRE%.spl~          ~override~ // sppr210, resist fire and cold [bg2 symbol]
              ~%CLERIC_RESIST_FIRE_AND_COLD%.spl~ ~override~ // sppr216, resist fire/cold [iwdee symbol]
              ~ca#ds210.spl~                      ~override~ // [geomantic sorcerer] resist fire/cold
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_SILENCE_15_FOOT%.spl~ ~override~ // sppr211, silence, 15' radius
              ~ca#ds211.spl~                 ~override~ // [geomantic sorcerer] silence 15' radius
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (2 * round) END // two rounds/level
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_SPIRITUAL_HAMMER%.spl~ ~override~ // sppr213, spiritual hammer
              ~spin113.spl~                   ~override~ // spiritual hammer
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (3 * round) min_dur = 6 RET abil_delta END // three rounds + 1 round/level  
  // hammer also gains an additional +1 enchantment every 6 levels (max at +6)  
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities 
    PATCH_IF game_is_iwdee BEGIN SPRINT hambase ~shamme~ END ELSE BEGIN SPRINT hambase ~shammr~ END
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = 0 ; index < abil_num ; ++index) BEGIN // start at existing abilities, as first hammer improvement should occur in old effects
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        READ_ASCII (fx_off + 0x14 + ((index2 + abil_fx_idx) * 0x30)) orig
        PATCH_IF op = 111 BEGIN // create weapon
          SET hammer = (((level - 1) / 6) + 1) // increases at 7, 13, 19, 25, 31
          PATCH_IF hammer < 2 BEGIN 
            PATCH_IF game_is_iwdee BEGIN SPRINT resource ~shamme1~ END ELSE BEGIN SPRINT resource ~shammr~ END
          END ELSE BEGIN
            PATCH_IF hammer > 5 BEGIN SET hammer = 6 END
            SPRINT resource ~%hambase%%hammer%~
          END  
          WRITE_ASCIIE (fx_off + 0x14 + ((index2 + abil_fx_idx) * 0x30)) ~%resource%~ #8 // new hammer
          DEFINE_ASSOCIATIVE_ARRAY new_items BEGIN ~%resource%~, ~%hammer%~, 0 => ~%orig%~ END
        END          
      END  
    END
  END
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_DRAW_UPON_HOLY_MIGHT%.spl~ ~override~ // sppr214, draw upon holy might
              ~%INNATE_DRAW_UPON_HOLY_MIGHT%.spl~ ~override~ // spin103, draw upon holy might
              ~bhaal2a.spl~                       ~override~ // draw upon holy might
              ~bdcaela2.spl~                      ~override~ // draw upon unholy might
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (10 * round) step_dur = 0 step_size = 3 RET abil_delta END // duration is static, just create headers 
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // gets +1 con/str/dex every three levels
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF ((op = 10) OR (op = 15) OR (op = 44) OR (op = 132)) BEGIN // bg2 uses DUHM opcode (132); iwdee uses individual opcodes for str/dex/con bonuses
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (level / 3)
        END        
      END  
    END
  END  
  BUT_ONLY IF_EXISTS

ACTION_IF game_is_iwdee BEGIN

  // i know, i know... goodberry is already ridiculously OP and then we make it better
  COPY_EXISTING ~%CLERIC_GOODBERRY%.spl~ ~override~ // sppr215, goodberry
                ~ca#ds207.spl~           ~override~ // [geomantic sorcerer] goodberries
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 2 step_dur = 1 END // 1 day/level (op255 does duration in days)
    BUT_ONLY IF_EXISTS
  
END
  
COPY_EXISTING ~%CLERIC_CALL_LIGHTNING%.spl~ ~override~ // sppr302, call lightning
              ~ca#ds302.spl~                ~override~ // [geomantic sorcerer] call lightning
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 damage_rolls = 1 base_dmg_rolls = 2 save_for_half = 1 RET abil_delta END // damage is 2d8 + 1d8 per level of caster
  // duration is one round/4 levels in bg2, 1 round/level in iwdee--both are handled by projectile
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      // iwdee scales projectile 1/level so last projectile is level 11; bg2ee does 1/4 levels so cap is 44
      PATCH_IF level > (43 - (33 * game_is_iwdee)) BEGIN SET proj = 91 END ELSE BEGIN SET proj = (80 + (level / (4 - (3 * game_is_iwdee)))) END // 91 is last call lightning projectile
      WRITE_SHORT (abil_off + 0x26 + (index * 0x28)) proj // projectile
    END
  END  
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_GLYPH_OF_WARDING%.spl~ ~override~ // sppr304, glyph of warding
              ~cdhmglp.spl~                   ~override~ // glyph of warding innate [divine remix]
              ~ikts5.spl~                     ~override~ // [npc kit] Glyph of Warding
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 damage_rolls = 1 END // damage is 1d4/level, save negates
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_HOLD_ANIMAL%.spl~ ~override~ // sppr305, hold animal
              ~ca#ds305.spl~             ~override~ // [geomantic sorcerer] hold animal
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (2 * round) RET abil_delta END // two rounds/level
  PATCH_IF ((abil_delta > 0) AND (!enhanced_edition)) BEGIN // obg2 uses effs... le sigh
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        READ_ASCII (fx_off + 0x14 + ((index2 + abil_fx_idx) * 0x30)) eff_file
        PATCH_IF ((op = 177) AND ("%eff_file%" STRING_COMPARE_REGEXP "^cdhd[ab][0-9]+$" = 0)) BEGIN // damage eff
          READ_LONG (fx_off + 0x0e + ((index2 + abil_fx_idx) * 0x30)) duration
          WRITE_ASCII (fx_off + 0x19 + ((index2 + abil_fx_idx) * 0x30)) ~%duration%~ #3
          READ_ASCII (fx_off + 0x14 + ((index2 + abil_fx_idx) * 0x30)) new_eff_file
          DEFINE_ASSOCIATIVE_ARRAY new_effs BEGIN ~%new_eff_file%~, ~%duration%~, 0, 0 => ~%eff_file%~ END
        END
      END
    END  
  END
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_PROTECTION_FROM_FIRE%.spl~ ~override~ // sppr306, protection from fire
              ~ca#ds306.spl~                      ~override~ // [geomantic sorcerer] protection from fire
  PATCH_IF game_is_iwdee BEGIN
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (10 * round) END // 1 turn/level
  END ELSE BEGIN
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (3 * round) END // three rounds + 1 round/level  
  END  
  BUT_ONLY IF_EXISTS

ACTION_IF game_is_iwdee BEGIN

  COPY_EXISTING ~%CLERIC_RIGID_THINKING%.spl~ ~override~ // sppr311, rigid thinking
    LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
    BUT_ONLY IF_EXISTS
  
  COPY_EXISTING ~%CLERIC_HOLY_SMITE%.spl~    ~override~ // sppr313, holy smite
                ~%CLERIC_UNHOLY_BLIGHT%.spl~ ~override~ // sppr314, unholy blight
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 1000 damage_special = 1 damage_rolls = 1 step_size = 2 END // + 1d6/2 levels

END ELSE BEGIN 
    
  COPY_EXISTING ~%CLERIC_HOLY_SMITE%.spl~    ~override~ // sppr313, holy smite
                ~%CLERIC_UNHOLY_BLIGHT%.spl~ ~override~ // sppr314, unholy blight
    // don't patch automatically
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 1000 damage_rolls = 1 RET abil_delta END // don't mess with durations as they don't scale
    PATCH_IF abil_delta > 0 BEGIN // if we added abilities
      SET eff_num = 0
      // damage is 1d4/level, but done via eff without EEFP - damage scaling with EEFP gets handled by CD_LEVEL_SELECT-O-MATIC
      READ_LONG  0x64 abil_off
      READ_SHORT 0x68 abil_num
      READ_LONG  0x6a fx_off
      FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
        READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
        READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
        READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
        FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
          READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
          READ_ASCII (fx_off + 0x14 + ((index2 + abil_fx_idx) * 0x30)) eff_file
          PATCH_IF ((op = 177) AND ("%eff_file%" STRING_COMPARE_REGEXP "^sp313l[0-9]+$" = 0)) BEGIN // damage eff
            READ_LONG (fx_off + 0x24 + ((index2 + abil_fx_idx) * 0x30)) save // have to account for non-EE damage split
            PATCH_IF ((save & (BIT0 + BIT1 + BIT2 + BIT3 + BIT4)) = 0) BEGIN // 1/2 damage that always happens 
              SET eff_num = (level / 2)  
            END ELSE BEGIN
              SET eff_num = ((level + 1) / 2)
            END  
            PATCH_IF eff_num < 10 BEGIN SPRINT eff_file_new ~sp313l0%eff_num%~ END ELSE BEGIN SPRINT eff_file_new ~sp313l%eff_num%~ END
            WRITE_ASCIIE (fx_off + 0x14 + ((index2 + abil_fx_idx) * 0x30)) ~%eff_file_new%~
            DEFINE_ASSOCIATIVE_ARRAY new_effs BEGIN ~%eff_file_new%~, 0, ~%eff_num%~, 0 => ~%eff_file%~ END
          END
        END
      END  
    END
    BUT_ONLY IF_EXISTS

END

COPY_EXISTING ~%CLERIC_FREE_ACTION%.spl~ ~override~ // sppr403, free action
              ~cdslfre.spl~              ~override~ // divine remix innate
              ~ca#ds403.spl~             ~override~ // [geomantic sorcerer] free action
  PATCH_IF !game_is_iwdee BEGIN
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (10 * round) END // one turn/level  
  END ELSE BEGIN  
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (10 * round) END // one turn + 1 round/level  
  END  
  BUT_ONLY IF_EXISTS


ACTION_IF game_is_iwdee BEGIN

  COPY_EXISTING ~%CLERIC_MENTAL_DOMINATION%.spl~ ~override~ // sppr405, mental domination
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (round * 3) END // 3 rounds/level
    BUT_ONLY IF_EXISTS

END

COPY_EXISTING ~%CLERIC_PROTECTION_FROM_LIGHTNING%.spl~ ~override~ // sppr407, protection from lightning
              ~ca#ds407.spl~                           ~override~ // [geomantic sorcerer] protection from lightning
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (5 * round) END // five rounds/level
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_PROTECTION_FROM_EVIL_10_FOOT%.spl~ ~override~ // sppr408, protection from evil, 10' radius
              ~%CLERIC_PROTECTION_FROM_GOOD_10_FOOT%.spl~ ~override~ // protection from good, 10' radius [divine remix]
              ~ohprgd10.spl~                              ~override~ // protection from good, 10' radius
              ~spcl233.spl~                               ~override~ // protection from evil, 10' radius
              ~ca#pev40.spl~                              ~override~ // [pnp celestials innate] Protection from Evil 40 foot radius (copy with different projectile)
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (10 * round) END // one turn/level
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_DEATH_WARD%.spl~ ~override~ // sppr409, death ward
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (10 * round) END // one turn/level
  BUT_ONLY IF_EXISTS
 
 ACTION_IF !game_is_iwdee BEGIN // iwdee poison is 20 damage over 20 seconds, flat

  COPY_EXISTING ~%CLERIC_POISON%.spl~ ~override~ // sppr411, poison
                ~ca#ds411.spl~        ~override~ // [geomantic sorcerer] poison
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_dur = 6 step_size = 2 damage_special = 1 damage_rolls = 2 RET abil_delta END // ups damage +2d8 every new header
    BUT_ONLY IF_EXISTS
    
END
  
COPY_EXISTING ~%CLERIC_HOLY_POWER%.spl~ ~override~ // sppr412, holy power
              ~ohtmps1.spl~             ~override~ // holy power
              ~a#tem07.spl~             ~override~ // divine remix innate
  LPF CD_LEVEL_SELECT-O-MATIC RET abil_delta END // duration is default 1 round/level
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // 1 hp/level bonus plus fighter thac0
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      PATCH_IF level > 20 BEGIN SET thac0 = 0 END ELSE BEGIN SET thac0 = (21 - level) END // minimum thac0 is 0
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 18 BEGIN // max hp bonus
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) level
        END ELSE  
        PATCH_IF op = 54 BEGIN // fighter thac0
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) thac0
        END        
      END  
    END
  END  
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_FAR_SIGHT%.spl~ ~override~ // sppr415, farsight
              ~cdhmfst.spl~            ~override~ // farsight innate [divine remix]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (3 * round) END // three rounds + 1 round/level  
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_PRODUCE_FIRE%.spl~ ~override~ // sppr418, produce fire [iwdee/iwdspells]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 1000 base_dmg_rolls = 1 damage_fixed = 1 END // damage is 1d4 + 1/level, no save
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_STATIC_CHARGE%.spl~ ~override~ // sppr419, static charge [iwdee/iwdspells]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (10 * round) min_dur = (4 + (10000 * (1 - enhanced_edition))) RET abil_delta END // don't mess with durations on obg2
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    SET fx_delta = 0
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    SET clone_cast = 0
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      WRITE_SHORT (abil_off + 0x20 + (index * 0x28)) (THIS + fx_delta)
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      SET clone_cast += 1
      SET clone_cast_done = 0
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 333 BEGIN // EEs
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) level // num hits
          WRITE_LONG (fx_off + 0x1c + ((index2 + abil_fx_idx) * 0x30)) (level + 2) // dice thrown
          SET index2 = abil_fx_num // kill fx loop
        END ELSE
        PATCH_IF op = 146 BEGIN // add extra casts of the subspell
          READ_BYTE   (fx_off + 0x0c + ((index2 + abil_fx_idx) * 0x30)) timing
          PATCH_IF timing = 4 BEGIN
            WRITE_LONG   (fx_off + 0x0e + ((index2 + abil_fx_idx) * 0x30)) (THIS + (clone_cast * 60))
            PATCH_IF !clone_cast_done BEGIN
              READ_ASCII  (fx_off +        ((index2 + abil_fx_idx) * 0x30)) template (48)
              SET clone_cast_done = 1
              FOR (index3 = 1 ; index3 <= clone_cast ; ++index3) BEGIN
                INSERT_BYTES (fx_off +        ((index2 + abil_fx_idx) * 0x30)) 0x30
                WRITE_ASCIIE (fx_off +        ((index2 + abil_fx_idx) * 0x30)) ~%template%~ #48
                WRITE_LONG   (fx_off + 0x0e + ((index2 + abil_fx_idx) * 0x30)) ((round * 10) * index3)
                SET fx_delta += 1
                SET abil_fx_num += 1
                SET index2 += 1
              END
              WRITE_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
            END
          END             
        END  
      END        
    END  
  END
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_SPIRIT_FIRE%.spl~  ~override~ // sppr450, spirit fire
              ~%CLERIC_SPIRIT_FIRE%b.spl~ ~override~ // sppr450b, [spirit fire double damage for spirits, fey creatures, elementals, and spectral undead]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 damage_rolls = 1 save_for_half = 1 END // damage is 1d4 per level
  BUT_ONLY IF_EXISTS
 
 ACTION_IF !game_is_iwdee BEGIN // iwdee flame strike is flat 6d8 damage
  
  COPY_EXISTING ~%CLERIC_FLAME_STRIKE%.spl~  ~override~ // sppr503, flame strike
                ~%CLERIC_FLAME_STRIKE%d.spl~ ~override~ // [flame strike damage moved here w/ iwdspells]
                ~%DACE_FLAME%.spl~           ~override~ // spin799 - only one level in EE
                ~%DACE_FLAME%d.spl~          ~override~ // spin799d, [subspell of flame strike]
                ~nmsun09.spl~                ~override~ // flame strike [divine remix innate]
                ~cdltflm.spl~                ~override~ // flame strike [divine remix innate]
                ~ca#fstri.spl~               ~override~ // [pnp celestials innate] flame strike
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 damage_rolls = 1 save_for_half = 1 END // damage is 1d8/level 
    BUT_ONLY IF_EXISTS

END

COPY_EXISTING ~%CLERIC_IRONSKIN%.spl~ ~override~ // sppr506, iron skins
              ~cdsmisk.spl~           ~override~ // [sp collection innate] iron skins innate
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 10000 step_size = 2 RET abil_delta END // no duration changes, just need headers for extra skins
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // extra skin every two levels
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 218 BEGIN // stoneskin
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (level / 2) // num skins
        END        
      END  
    END
  END
  BUT_ONLY IF_EXISTS
 
 ACTION_IF !game_is_iwdee BEGIN // static duration of 1 turn on iwdee
  
  COPY_EXISTING ~%CLERIC_CHAMPIONS_STRENGTH%.spl~ ~override~ // sppr507, champion's strength
                ~ikts8.spl~                       ~override~ // [npc kit] Champion's Strength
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (3 * round) RET abil_delta END // 3 rounds/level
    PATCH_IF abil_delta > 0 BEGIN // if we added abilities
      // +1 thac0 every three levels
      READ_LONG  0x64 abil_off
      READ_SHORT 0x68 abil_num
      READ_LONG  0x6a fx_off
      FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
        READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
        READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
        READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
        FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
          READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
          PATCH_IF op = 54 BEGIN // thac0 bonus
            WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (level / 3) // thac0 bonus
          END        
        END  
      END
    END
    BUT_ONLY IF_EXISTS

END

COPY_EXISTING ~%CLERIC_CHAOTIC_COMMANDS%.spl~ ~override~ // sppr508, chaotic commands
              ~cdsmchc.spl~                   ~override~ // [sp collection innate] chaotic commands innate
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (10 * round) END // 1 turn/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_MAGIC_RESISTANCE%.spl~ ~override~ // sppr509, magic resistance
              ~spwish31.spl~                  ~override~ // magic resistance [iwdee]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (3 * round) RET abil_delta END // 3 rounds + 1 round/level
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // 2% MR per level
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 166 BEGIN // MR
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (2 * level)
        END
      END     
    END
  END
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_GREATER_COMMAND%.spl~ ~override~ // sppr512, greater command
              ~ca#ds512.spl~                 ~override~ // [geomantic sorcerer] greater command
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_RIGHTEOUS_MAGIC%.spl~ ~override~ // sppr513, righteous magic
  LPF CD_LEVEL_SELECT-O-MATIC RET abil_delta END // 1 round/level
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // +1 STR every three levels, +1 hp every level
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 44 BEGIN // str bonus
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (level / 3)
        END ELSE
        PATCH_IF op = 18 BEGIN // max hp bonus
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) level
        END
      END     
    END
  END
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_MASS_CURE%.spl~ ~override~ // sppr514, mass cure
              ~a#re11.spl~             ~override~ // mass cure [divine remix]
              ~bhaal1a.spl~            ~override~ // mass healing (unused?)
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 RET abil_delta END // no duration change, just need addt'l headers
  PATCH_IF ("%SOURCE_RES%" STRING_COMPARE_CASE ~%CLERIC_MASS_CURE%~ = 0) BEGIN SET multiply = 1 END ELSE BEGIN SET multiply = 2 END
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // mass cure cures 1d8 + 1/level HP; bhaal1a heals 2d8 + 2/level
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 17 BEGIN // cur hp bonus
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (level * multiply)
        END
      END     
    END
  END
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_RIGHTEOUS_WRATH_OF_THE_FAITHFUL%a.spl~ ~override~ // righteous wrath of the faithful, matching alignment bonus
              ~%CLERIC_RIGHTEOUS_WRATH_OF_THE_FAITHFUL%b.spl~ ~override~ // righteous wrath of the faithful, non-matching alignment bonus
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

ACTION_IF !enhanced_edition BEGIN

  COPY_EXISTING ~%CLERIC_UNDEAD_WARD%.spl~ ~override~ // sppr521, undead ward - obg2 version summons new creature at every level
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 10) step_dur = 0 RET abil_delta END // fixed at one turn
    PATCH_IF abil_delta > 0 BEGIN // if we added abilities 
      READ_LONG  0x64 abil_off
      READ_SHORT 0x68 abil_num
      READ_LONG  0x6a fx_off
      FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
        READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
        READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
        READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
        FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
          READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
          READ_ASCII (fx_off + 0x14 + ((index2 + abil_fx_idx) * 0x30)) eff_file
          PATCH_IF ((op = 177) AND ("%eff_file%" STRING_COMPARE_REGEXP "^cdiuwr[0-9]+$" = 0)) BEGIN // damage eff
            PATCH_IF level < 10 BEGIN SET off = 0x1b END ELSE BEGIN SET off = 0x1a END
            WRITE_ASCIIE (fx_off + off  + ((index2 + abil_fx_idx) * 0x30)) ~%level%~
            READ_ASCII   (fx_off + 0x14 + ((index2 + abil_fx_idx) * 0x30)) new_eff
            DEFINE_ASSOCIATIVE_ARRAY new_effs BEGIN ~%new_eff%~, 0, 0, 0 => ~%eff_file%~ END
            DEFINE_ASSOCIATIVE_ARRAY new_cres BEGIN ~%new_eff%~, ~%level%~ => ~%eff_file%~ END
          END
        END
      END  
    END
    BUT_ONLY IF_EXISTS

END

COPY_EXISTING ~%CLERIC_MASS_CAUSE_LIGHT_WOUNDS%.spl~ ~override~ // sppr523, mass cause light wounds
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR damage_fixed = 1 base_dmg_rolls = 1 save_for_half = 3 END // damage is 1d8 + 1/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%ENEMY_CLERIC_SLAY_LIVING%.spl~ ~override~ // sppr599, slay living (doesn't scale on iwdee)
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 damage_fixed = 1 base_dmg_rolls = 1 END // unlike player version, enemy slay living damage scales with level: damage is 1d8 + 1/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_AERIAL_SERVANT%.spl~ ~override~ // sppr601, aerial servant
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (10 * round) END // one turn/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_CONJURE_FIRE_ELEMENTAL%.spl~ ~override~ // sppr605, conjure fire elemental
              ~a#kos11.spl~                         ~override~ // conjure fire elemental [divine remix]
              ~ca#ds605.spl~                        ~override~ // [geomantic sorcerer] conjure fire elemental
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (10 * round) END // one turn/level
  BUT_ONLY IF_EXISTS

ACTION_IF game_is_iwdee BEGIN // doesn't scale in bg/bg2

  COPY_EXISTING ~%CLERIC_FIRE_SEEDS%.spl~ ~override~ // sppr606, fire seeds
                ~ca#ds606.spl~            ~override~ // [geomantic sorcerer] fire seeds
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (10 * round) END // one turn/level
    BUT_ONLY IF_EXISTS

END

COPY_EXISTING ~%CLERIC_ENTROPY_SHIELD%.spl~ ~override~ // sppr615, entropy shield
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_SPIRITUAL_LOCK%.spl~ ~override~ // sppr650, spiritual lock
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (10 * round) END // 1 turn + 1 round/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_SHIELD_OF_THE_ARCHONS%.spl~ ~override~ // sppr701, shield of the archons
              ~ca#ds701.spl~                       ~override~ // [geomantic sorcerer] shield of the archons
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (3 * round) RET abil_delta END // 3 rounds/level
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // spell deflection = 1 level/2 caster levels
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 201 BEGIN // spell deflection
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (level / 2)
        END        
      END  
    END
  END
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_CONJURE_EARTH_ELEMENTAL%.spl~ ~override~ // sppr702, conjure earth elemental
              ~%CLERIC_CONJURE_AIR_ELEMENTAL%.spl~   ~override~ // conjure air elemental [divine remix]
               ~ca#ds702.spl~                        ~override~ // [geomantic sorcerer] conjure earth elemental
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (10 * round) END // one turn/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_FIRE_STORM%.spl~ ~override~ // sppr705, fire storm
              ~ca#ds705.spl~            ~override~ // [geomantic sorcerer] fire storm
              ~ca#fstom.spl~            ~override~ // [pnp celestials innate] fire storm
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 damage_fixed = 1 base_dmg_rolls = 2 save_for_half = game_is_iwdee RET abil_delta END // damage is 2d8 + 1/level (save-for-half only on iwdee)
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_SYMBOL_FEAR%.spl~ ~override~ // sppr706, symbol, fear
              ~%CLERIC_SYMBOL_STUN%.spl~ ~override~ // sppr718, symbol, stun
              ~ca#sfear.spl~             ~override~ // [pnp celestials innate] Symbol Fear 
              ~ca#sstun.spl~             ~override~ // [pnp celestials innate] Symbol Stun 
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_size = 3 END // two rounds + 1 round/3 caster levels
  BUT_ONLY IF_EXISTS

ACTION_IF !game_is_iwdee BEGIN // sunray and FoD don't scale in IWDEE

  ACTION_IF FILE_EXISTS_IN_GAME ~%CLERIC_SUNRAY%a.spl~ BEGIN // undead damage farmed out to separate spell

    COPY_EXISTING ~%CLERIC_SUNRAY%a.spl~ ~override~ // sppr707a, [subspell of sunray, scaling undead damage]
      LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 damage_rolls = 1 RET abil_delta END // damage is 1d6/level
      BUT_ONLY IF_EXISTS
      
  END ELSE BEGIN // otherwise still using the old eff system
    
    COPY_EXISTING ~%CLERIC_SUNRAY%.spl~ ~override~ // sppr707, sunray
                  ~ca#ds707.spl~        ~override~ // [geomantic sorcerer] sunray
      // don't patch automatically
      LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 1000 RET abil_delta END // just create new headers
      PATCH_IF abil_delta > 0 BEGIN // if we added abilities
        // damage is 1d6/level
        READ_LONG  0x64 abil_off
        READ_SHORT 0x68 abil_num
        READ_LONG  0x6a fx_off
        FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
          READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
          READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
          READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
          FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
            READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
            READ_ASCII (fx_off + 0x14 + ((index2 + abil_fx_idx) * 0x30)) eff_file
            PATCH_IF ((op = 177) AND ("%eff_file%" STRING_COMPARE_REGEXP "^sp707l[0-9]+$" = 0)) BEGIN // damage eff
              PATCH_IF level < 10 BEGIN SET off = 0x1b END ELSE BEGIN SET off = 0x1a END
              WRITE_ASCIIE (fx_off + off + ((index2 + abil_fx_idx) * 0x30)) ~%level%~
              DEFINE_ASSOCIATIVE_ARRAY new_effs BEGIN ~sp707l%level%~, 0, ~%level%~, 0 => ~%eff_file%~ END
            END
          END
        END  
      END
      BUT_ONLY IF_EXISTS
      
  END

  COPY_EXISTING ~%CLERIC_FINGER_OF_DEATH%.spl~ ~override~ // sppr708, finger of death
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 damage_fixed = 1 base_dmg_rolls = 2 RET abil_delta END // damage is 2d8 + 1/level (no save)
    BUT_ONLY IF_EXISTS

END 

COPY_EXISTING ~%CLERIC_CONFUSION%.spl~ ~override~ // sppr709, confusion
  PATCH_IF game_is_iwdee BEGIN
    LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level on iwdee
  END ELSE BEGIN
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_size = 2 END // 1 round/2 levels on bg2
  END  
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_REGENERATE%.spl~ ~override~ // sppr711, regeneration
              ~%CLERIC_WITHER%.spl~     ~override~ // sppr740, wither
              ~bhaal1b.spl~             ~override~ // regeneration (unused?)
              ~cdilrgn.spl~             ~override~ // regeneration [divine remix]
              ~ca#ds711.spl~            ~override~ // [geomantic sorcerer] regeneration
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_size = 2 END // 1 round/2 levels
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_ENERGY_BLADES%.spl~ ~override~ // sppr721, energy blades
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (40 * round) step_dur = 0 RET abil_delta END // static duration of four turns
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // one blade created/level
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 111 BEGIN
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) level // oddly, energy blades has full headers for levels 1-20
        END        
      END  
    END
  END
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_SUMMON_DEVA%.spl~            ~override~ // sppr726, summon deva
              ~%CLERIC_SUMMON_FALLEN_DEVA%.spl~     ~override~ // sppr727, summon fallen deva
              ~%PALADIN_SUMMON_DEVA%.spl~           ~override~ // spcl923, summon deva
              ~%BLACKGUARD_SUMMON_FALLEN_DEVA%.spl~ ~override~ // spcl935, summon fallen deva
              ~cdsmdva.spl~                         ~override~ // [sp collection innate] summon deva innate
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 4) END // four rounds + 1 round/level
  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~%CLERIC_MASS_RAISE_DEAD%.spl~ ~override~ // sppr729, mass raise dead = no changes needed, just calls subspell a
COPY_EXISTING ~%CLERIC_MASS_RAISE_DEAD%a.spl~ ~override~ // sppr729a, [subspell of mass raise dead]
              ~%CLERIC_MASS_RAISE_DEAD%b.spl~ ~override~ // sppr729b, [subspell of mass raise dead]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = 0 RET abil_delta END // no duration change, just need addt'l headers
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // cures 3d10 + 1/level HP - adjusted minus one for the dead folks since the resurrected start at 1 hp
    PATCH_IF ("%SOURCE_RES%" STRING_COMPARE_CASE ~%CLERIC_MASS_RAISE_DEAD%a~ = 0) BEGIN SET malus = 1 END ELSE BEGIN SET malus = 0 END
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 17 BEGIN // cur hp bonus
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (level - malus)
        END
      END     
    END
  END
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_AURA_OF_FLAMING_DEATH%.spl~ ~override~ // sppr730, aura of flaming death
              ~cdsmafd.spl~                        ~override~ // [sp collection innate] aura of flaming death innate
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_size = 2 END // 1 round/2 levels
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_IMPERVIOUS_SANCTITY_OF_MIND%.spl~ ~override~ // sppr735, impervious sanctity of mind
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR step_dur = (round * 10) END // 1 turn/level
  BUT_ONLY IF_EXISTS
  
COPY_EXISTING ~%CLERIC_IMPREGNABLE_MIND%.spl~ ~override~ // impregnable mind (divine remix)
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 10) step_dur = (round * 1) END // 1 turn + 1 round/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_RESIST_ACID_AND_CORROSION%.spl~ ~override~ // resist acid and corrosion [divine remix]
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%CLERIC_STRENGTH_OF_STONE%.spl~ ~override~ // strength of stone [divine remix]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 3) END // 3 rounds + 1 round/level
  BUT_ONLY IF_EXISTS