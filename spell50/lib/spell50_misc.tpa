/////                                                  \\\\\
///// spin/spcl/other                                  \\\\\
/////                                                  \\\\\

//COPY_EXISTING ~backstab.spl~ ~override~ // unused/not a spell
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~bardsong.spl~ ~override~ // unused/not a spell
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~bdaurafe.spl~ ~override~ // aura of fear - belhifet ability, scales save penalty by difficulty
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

COPY_EXISTING ~bdmycsp1.spl~ ~override~ // hallucinator spores [sod]
              ~bdmycsp2.spl~ ~override~ // pacifier spores [sod]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_dur = (round * 1) step_size = 5 END // 1 round/5 levels
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~bdpweapn.spl~ ~override~ // Poison Weapon's on-hit effects
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 6 dur_special = 1 damage_fixed = 2 damage_special = 1 step_size = 4 RET abil_delta END // add another round to poison duration. +2 damage per 4 levels
  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~bdsha12a.spl~ ~override~ // shambling mound attack - scales based on HoF
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~bdsw1h26.spl~ ~override~ // sod - copied from phantom blade, but only used at level 1 to hand out weapons from a dialogue
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~blindimm.spl~ ~override~ // unused, 1 round/level
//              ~deafimm.spl~  ~override~ // unused, 1 round/level
//  LPF CD_LEVEL_SELECT-O-MATIC END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~drgrbrht.spl~ ~override~ // sod green dragon breath - has two levels for difficulty, doesn't need scaling
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~fjbardb.spl~  ~override~ // bard song
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

COPY_EXISTING ~marw201.spl~  ~override~ // daer'ragh's mental agility
              ~marw301.spl~  ~override~ // daer'ragh's physical agility
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_size = 2 RET abil_delta END // 1 round + 1 round/2 levels
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    // gets +1 casting speed (marw201) or attack speed (marw301) every four levels 
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      PATCH_IF level > 39 BEGIN SET cast = 9 END ELSE BEGIN SET cast = ((level / 4) - 1) END
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF ((op = 189) OR (op = 190)) BEGIN // casting/attack speed bonus
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) cast
        END        
      END  
    END
  END  
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~marw401.spl~  ~override~ // daer'ragh's aura cleansing
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_size = 2 END // 1 round + 1 round/2 levels
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~ohhsumm.spl~  ~override~ // children of the night
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

// changing number of effects
COPY_EXISTING ~ohtmps2d.spl~ ~override~ // chaos of battle, positive
              ~ohtmps2e.spl~ ~override~ // chaos of battle, negative
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 10000 step_size = 6 RET abil_delta END // fixed duration, just need the new headers
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    PATCH_IF ("%SOURCE_RES%" STRING_COMPARE_CASE ~ohtmps2d~ = 0) BEGIN SET multiply = 1 END ELSE BEGIN SET multiply = "-1" END
    // +1/six levels in various effects, -1 in e spell, iterating at levels 1, 7, 13, &c. 
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      SET bonus = (((level + 5) / 6) * multiply) // sets bonus; also makes negative for e spell
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF ((op = 0) OR (op = 22) OR ((op >= 33) AND (op <= 37)) OR (op = 54)) BEGIN // ac bonus, luck, thac0 bonus, saves
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) bonus
        END ELSE  
        PATCH_IF (op = 18) BEGIN // max hp bonus
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (bonus * 5)
        END        
      END  
    END
  END  
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~ohtyr2.spl~   ~override~ // divine favor
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 10000 step_size = 3 RET abil_delta END // fixed duration, just need the new headers
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      SET bonus = (((level + 5) / 6) * multiply) // sets bonus; also makes negative for e spell
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF ((op = 73) OR (op = 54)) BEGIN // damage, thac0 bonus
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (level / 3)
        END        
      END  
    END
  END  
  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~%BLACKGUARD_AURA_OF_DESPAIR%.spl~ ~override~ // spcl103, aura of despair - has different effects at different levels
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~%ARCHER_CALL_SHOT%.spl~ ~override~ // spcl121, called shot
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%PALADIN_SMITE_EVIL%.spl~ ~override~ // spcl122, smite evil [iwdee]
              ~cdiplse.spl~              ~override~ // smite evil [iwdification]
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR damage_special = 1 damage_rolls = 1 step_size = 3 END // 1d6 + 1d6/3 levels
  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~spcl123.spl~  ~override~ // unused
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~spcl143.spl~  ~override~ // kensai weapon speed bonus
//              ~spcl816.spl~  ~override~ // monk weapon speed bonus
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%PALADIN_LAY_ON_HANDS%.spl~ ~override~ // spcl211, lay on hands
              ~%MONK_LAY_ON_HANDS%.spl~    ~override~ // spcl815, lay on hands
              ~%MAZZY_LAY%.spl~            ~override~ // spin827, lay on hands
              ~spin109.spl~                ~override~ // lay on hands
              ~ikts1.spl~                  ~override~ // [npc kit] lay on hands
  PATCH_IF !game_is_iwdee OR ("%SOURCE_RES%" STRING_COMPARE_CASE "spin109") BEGIN // spin109 is eye of the mage in IWDEE
    LPF CD_LEVEL_SELECT-O-MATIC INT_VAR min_dur = 10000 RET abil_delta END // fixed duration, just need the new headers
    // heals 2 hp/level
    PATCH_IF abil_delta > 0 BEGIN // if we added abilities
      READ_LONG  0x64 abil_off
      READ_SHORT 0x68 abil_num
      READ_LONG  0x6a fx_off
      FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
        READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
        READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
        READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
        FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
          READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
          PATCH_IF op = 17 BEGIN // cur hp bonus
            WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (level * 2)
          END        
        END  
      END
    END 
  END    
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%INQUIS_DISPEL_MAGIC%.spl~ ~override~ // spcl231, dispel magic
  PATCH_IF cap > 24 BEGIN SET idm_cap = 25 END ELSE BEGIN SET idm_cap = cap END // don't extend dispel magic beyond level 50
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR level_cap = idm_cap min_dur = 10000 RET abil_delta END // fixed duration, just need the new headers
  // dispels at 2x level
  PATCH_IF abil_delta > 0 BEGIN // if we added abilities
    READ_LONG  0x64 abil_off
    READ_SHORT 0x68 abil_num
    READ_LONG  0x6a fx_off
    FOR (index = (abil_num - abil_delta) ; index < abil_num ; ++index) BEGIN // loop through new abilities only
      READ_SHORT  (abil_off + 0x10 + (index * 0x28)) level       // just read the level
      READ_SHORT  (abil_off + 0x1e + (index * 0x28)) abil_fx_num
      READ_SHORT  (abil_off + 0x20 + (index * 0x28)) abil_fx_idx
      FOR (index2 = 0 ; index2 < abil_fx_num ; ++index2) BEGIN
        READ_SHORT (fx_off +        ((index2 + abil_fx_idx) * 0x30)) op
        PATCH_IF op = 58 BEGIN // dispel
          WRITE_LONG (fx_off + 0x04 + ((index2 + abil_fx_idx) * 0x30)) (level * 2)
        END        
      END  
    END
  END  
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%SUN_SOUL_SUN_SOULRAY%.spl~ ~override~ // spcl236, sun soulray
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR damage_special = 1 damage_rolls = 1 step_size = 2 RET abil_delta END // 1d8/2 levels
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%SUN_SOUL_FLAMING_FISTS%.spl~  ~override~ // flaming fists, spcl238
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_size = 10 RET abil_delta END // add 1 round/10 levels
  BUT_ONLY IF_EXISTS
  
//COPY_EXISTING ~spcl411.spl~  ~override~ // snare
//              ~spcl411f.spl~ ~override~ // snare fail
//              ~spcl415.spl~  ~override~ // special snare
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~spcl422.spl~  ~override~ // unused?
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~%BLADE_DEFENSIVE_SPIN%.spl~ ~override~ // spcl522, defensive spin
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~spcl542a.spl~ ~override~ // skald bard song
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~spcl622.spl~  ~override~ // spirit snake - shaman summons
//              ~spcl623.spl~  ~override~ // spirit bear
//              ~spcl624.spl~  ~override~ // spirit lion
//              ~spcl625.spl~  ~override~ // spirit wolf
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%TALOS_STORMSHIELD%.spl~ ~override~ // spcl721, storm shield
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%HELM_SEEKING_SWORD%.spl~ ~override~ // spcl731, seeking sword
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%LATHANDER_BOON%.spl~ ~override~ // spcl741, boon of lathander
              ~%LATHANDER_BOON%d.spl~        ~override~ // APR subspell for oBG2
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~spcl751a.spl~ ~override~ // jester bard sog
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~spcl822.spl~  ~override~ // monk AC progression
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%WARRIOR_HARDINESS%.spl~ ~override~ // spcl907, hardiness
              ~spwish12.spl~            ~override~ // hardiness
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dur_special = 1 step_size = 2 END // 1 round/2 levels
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~spdd03.spl~   ~override~ // breath weapon
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR damage_special = 1 damage_rolls = 1 step_size = 3 RET abil_delta END // does 3d8 fire + 1d8/3 levels after level 6
  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~%BLACKGUARD_ABSORB_HEALTH%.spl~ ~override~ // spcl102, absorb health - has multiple headers, but all cast spdn01a at caster level so no need to extend
COPY_EXISTING ~spdn01a.spl~                    ~override~ // absorb health (spcl102) subspell
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR dmage_fixed = 2 min_dur = 10000 END // fixed duration, absorbs 2 health/level
  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%SHADOW_DRAGON_SHADOWS%.spl~  ~override~ // spin687, create shadows
              ~%SHADOW_DRAGON_SHADOWS%a.spl~ ~override~ // spin687, create shadows subspell
  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 3) END // 3 rounds + 1 round/level
  BUT_ONLY IF_EXISTS

// has two headers for 1, 12
//COPY_EXISTING ~%NON_DETECTION_SELF%.spl~  ~override~ // spin698, improved invisibility
//              ~%NON_DETECTION_SELF%a.spl~ ~override~ // spin698, improved invisibility
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

COPY_EXISTING ~%NYMPH_CONFUSION%.spl~ ~override~ // spin704, confusion
  LPF CD_LEVEL_SELECT-O-MATIC END // 1 round/level
  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~%DRAGON_FEAR%.spl~ ~override~ // spin895, dragon fear - lasts one turn, but save bonuses scale - ignore like spook
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

// only level 1 is used; ee trims out the extra headers
//COPY_EXISTING ~%BEHOLDER_GAS_SPORE%.spl~ ~override~ // spin897, gas spore
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS

//COPY_EXISTING ~spsh004.spl~  ~override~ // unused?
//  LPF CD_LEVEL_SELECT-O-MATIC INT_VAR base_dur = (round * 1) step_dur = (round * 1) step_size = 1 RET abil_delta END
//  BUT_ONLY IF_EXISTS